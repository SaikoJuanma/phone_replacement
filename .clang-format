# SPDX-License-Identifier: Apache-2.0
#
# Note: The list of ForEachMacros can be obtained using:
#
#    git grep -h '^#define [^[:space:]]*FOR_EACH[^[:space:]]*(' include/ \
#    | sed "s,^#define \([^[:space:]]*FOR_EACH[^[:space:]]*\)(.*$,  - '\1'," \
#    | sort | uniq
#
# References:
#   - https://clang.llvm.org/docs/ClangFormatStyleOptions.html

---
BasedOnStyle: LLVM
AlignConsecutiveMacros: AcrossComments #allign define, even if there comment in between
AllowShortBlocksOnASingleLine: Never # all blocks on multiple lines regardless of content
AllowShortCaseLabelsOnASingleLine: false # don't allow cases to be in the same line.
AllowShortEnumsOnASingleLine: false #we don't allow enums to go in just one line.
AllowShortFunctionsOnASingleLine: None #no function is allowed to be in a single line.
AllowShortIfStatementsOnASingleLine: false #no if statement can be on a single line
AllowShortLoopsOnASingleLine: false #no loops allowed in single line.
AttributeMacros: #Macros that should be handled as attributes
  - __aligned
  - __deprecated
  - __packed
  - __printf_like
  - __syscall
  - __syscall_always_inline
  - __subsystem
BitFieldColonSpacing: After #space after :, but not before
BreakBeforeBraces: Linux #follows { format of linux
AlignAfterOpenBracket: BlockIndent
ColumnLimit: 100 #maximum line lenght 
ConstructorInitializerIndentWidth: 8 #work in C++
ContinuationIndentWidth: 4 #It controls indentation of continued lines in any context
ForEachMacros: #Macros to be treated as loops.
  - 'ARRAY_FOR_EACH'
  - 'ARRAY_FOR_EACH_PTR'
  - 'FOR_EACH'
  - 'FOR_EACH_FIXED_ARG'
  - 'FOR_EACH_IDX'
  - 'FOR_EACH_IDX_FIXED_ARG'
  - 'FOR_EACH_NONEMPTY_TERM'
  - 'FOR_EACH_FIXED_ARG_NONEMPTY_TERM'
  - 'RB_FOR_EACH'
  - 'RB_FOR_EACH_CONTAINER'
  - 'SYS_DLIST_FOR_EACH_CONTAINER'
  - 'SYS_DLIST_FOR_EACH_CONTAINER_SAFE'
  - 'SYS_DLIST_FOR_EACH_NODE'
  - 'SYS_DLIST_FOR_EACH_NODE_SAFE'
  - 'SYS_SEM_LOCK'
  - 'SYS_SFLIST_FOR_EACH_CONTAINER'
  - 'SYS_SFLIST_FOR_EACH_CONTAINER_SAFE'
  - 'SYS_SFLIST_FOR_EACH_NODE'
  - 'SYS_SFLIST_FOR_EACH_NODE_SAFE'
  - 'SYS_SLIST_FOR_EACH_CONTAINER'
  - 'SYS_SLIST_FOR_EACH_CONTAINER_SAFE'
  - 'SYS_SLIST_FOR_EACH_NODE'
  - 'SYS_SLIST_FOR_EACH_NODE_SAFE'
  - '_WAIT_Q_FOR_EACH'
  - 'Z_FOR_EACH'
  - 'Z_FOR_EACH_ENGINE'
  - 'Z_FOR_EACH_EXEC'
  - 'Z_FOR_EACH_FIXED_ARG'
  - 'Z_FOR_EACH_FIXED_ARG_EXEC'
  - 'Z_FOR_EACH_IDX'
  - 'Z_FOR_EACH_IDX_EXEC'
  - 'Z_FOR_EACH_IDX_FIXED_ARG'
  - 'Z_FOR_EACH_IDX_FIXED_ARG_EXEC'
  - 'Z_GENLIST_FOR_EACH_CONTAINER'
  - 'Z_GENLIST_FOR_EACH_CONTAINER_SAFE'
  - 'Z_GENLIST_FOR_EACH_NODE'#include "something.h"
  - 'Z_GENLIST_FOR_EACH_NODE_SAFE'
  - 'STRUCT_SECTION_FOREACH'
  - 'STRUCT_SECTION_FOREACH_ALTERNATE'
  - 'TYPE_SECTION_FOREACH'
  - 'K_SPINLOCK'
  - 'COAP_RESOURCE_FOREACH'
  - 'COAP_SERVICE_FOREACH'
  - 'COAP_SERVICE_FOREACH_RESOURCE'
  - 'HTTP_RESOURCE_FOREACH'
  - 'HTTP_SERVER_CONTENT_TYPE_FOREACH'
  - 'HTTP_SERVICE_FOREACH'
  - 'HTTP_SERVICE_FOREACH_RESOURCE'
  - 'I3C_BUS_FOR_EACH_I3CDEV'
  - 'I3C_BUS_FOR_EACH_I2CDEV'
IfMacros: #macros that should be treated as if statements.
  - 'CHECKIF'
# Disabled for now, see bug https://github.com/zephyrproject-rtos/zephyr/issues/48520
#IncludeBlocks: Regroup
IncludeCategories: #priority for header files can help avoid compilation issues.
  - Regex: '^".*\.h"$'
    Priority: 0
  - Regex: '^<(assert|complex|ctype|errno|fenv|float|inttypes|limits|locale|math|setjmp|signal|stdarg|stdbool|stddef|stdint|stdio|stdlib|string|tgmath|time|wchar|wctype)\.h>$'
    Priority: 1
  - Regex: '^\<zephyr/.*\.h\>$'
    Priority: 2
  - Regex: '.*'
    Priority: 3
IndentCaseLabels: true #switch cases, indent to improve readability
IndentGotoLabels: false #labels 
IndentWidth: 4
TabWidth: 4 
InsertBraces: true # add braces around single line control statements helps to prevent bugs
SpaceBeforeInheritanceColon: false #works C++
SpaceBeforeParens: ControlStatementsExceptControlMacros #control statements space before (), control macros no
SortIncludes: Never # Controls header ordering to prevent dependency-related compilation errors and maintainability issues
UseTab: Never #we omit using tab, so format look the same in all editors, using 4 spaces instead
WhitespaceSensitiveMacros:
  - COND_CODE_0
  - COND_CODE_1
  - IF_DISABLED
  - IF_ENABLED
  - LISTIFY
  - STRINGIFY
  - Z_STRINGIFY

#Allignment of variable assignments when they are together. this work to improve readability
AlignConsecutiveAssignments:
  Enabled: false
  AcrossEmptyLines: false #empty lines break the allignment
  AcrossComments: true #comment don't break allignment
  AlignCompound: true # allign different operatos for example += *=, etc

#Allign structs to the left in order to improve readability
AlignArrayOfStructures: Left

#Allignment of variable declaration when they are together. this work to improve readability
AlignConsecutiveDeclarations:
  Enabled: false
  AcrossEmptyLines: false 
  AcrossComments: true 
  AlignFunctionPointers: false